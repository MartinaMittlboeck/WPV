**************************************************************************************************;
* WPV-SAS-Macro                                                                                  *;
* Author: Martina Mittlböck, Medical University of Vienna, Austria                               *;
* Version 29.7.2021                                                                              *;
**************************************************************************************************;
*                                                                                                *;
* data ......... name of input data set                                                          *;
*                                                                                                *;
* td_time ...... name of variable containing time until time-dependent event                                *;
*                only values between zero and min(tsearch, surv_time) are condidered as events   *;
*                otherwise no time-dependent events are assumed                                  *;            
*                                                                                                *;
* surv_time .... name of survival time variable (e.g. overall survival)                          *;
*                                                                                                *;
* surv_event ... name of survival status, zero is assumed to indicate censoring                  *;
*                                                                                                *;
* tsearch ...... time point of maximum search time                                               *;
*                                                                                                *;
* tstar ........ time point for calculaton of survival probabilities and cHR                     *;
*                                                                                                *;
* result_out ... name of output data set, contains variable of input data set enriched by        *;
*                     _time_td ... time until intermediate event, final event or t-search        *;
*                     _td_event .. indicator for intermediate event (1-yes, 0-no)                *;
*                     _donor ..... group membership (0=no donor / 1=donor / -1=unknown)          *;
*                     _pat_id .... number of observation in input data set (= patient number)    *;
*                     _VM ........ common pseudo-values                                          *;
*                     _td_ ....... group membership for analysis (0-no donor / 1-donor),         *;
*                                  where patients with _donor=-1 have two observations,          *;
*                                  one with _td_=0 and one with _td_=1 with different weights    *;
*                     _M_weight .. weights for analysis, with values <=1 for _donor=-1           *; 
*                                  and a value of 1 for _donor=0 or 1                            *;
*                Some observations with unknown donor available status (_donor=-1) are doubled.  *;
*                This data set is used for analysis in PROC GENMOD                               *;
*                                                                                                *;
* Note, that there could be conflicts when data-set variables start with an underscore "_"       *;
* Every observation is assumed to represent a patient                                            *;
*                                                                                                *;
**************************************************************************************************;

%macro WPV(data, td_time, surv_time, surv_event, tsearch, tstar, result_out);

proc format;
	value _donf_ 0='no donor available' 1='donor available' -1='donor search ceased'; 
run;

%if &tsearch>&tstar %then %do;
	%put Caution t-search is higher than t-star;
	%put Thus, t-search will be set to t-star;
	%let tsearch=&tstar;
	%let remark = %str((t-search war higher than t-star, thus t-search = t-star));
%end;
%else %let remark=;
data _data_all; set &data;
	if &surv_time>=0 and &surv_event^=.; 
run;
data _data_all; 
	set _data_all END=_nrobs_;
	* set upper time to t-star;
	if &surv_time>&tstar then do;
		&surv_time=&tstar;
		&surv_event=0;
	end;
	* calculate time-dependent time and status;
	if 0<=&td_time<=min(&surv_time,&tsearch,&tstar) then do;
		_time_td=&td_time;
		_td_event=1;
		_donor=1;
	end;
	else do;
		_time_td=min(&surv_time,&tsearch,&tstar);
		_td_event=0;
		if &surv_time<min(&tsearch,&tstar) then _donor=-1;
		else _donor=0;
	end;
	* unique numbering of patients; 
	_pat_id=_n_;
	* determination of effective sample size;
	if _nrobs_ then do;
		call symputx('samplesize',_pat_id);
	end;
run;	

**** for pseudo-values calculation ***************************;
proc sort data=_data_all out=_scen(keep=_pat_id &surv_time &surv_event &td_time _td_event _time_td); by _pat_id; run;
proc lifetest data=_scen timelist=&tstar reduceout outsurv=_PM(keep=survival rename=survival=_S_PM) noprint notable plots=none;
	time &surv_time*&surv_event(0);
run;
data _PM; set _PM;
	if _n_=1 then call symput('surv_tstar',_S_PM);
run;
data jackknife_S;
	set _scen;
	do _i=1 to &samplesize; 
			if _i ne _pat_id then output; * leave the ith patient out - patient is total patient number; 
	end;
run;
proc sort data=jackknife_S;
	by _i;
run;
* for all patients except the i-th until t* - i Proc Lifetests;
proc lifetest data=jackknife_S timelist=&tstar reduceout outsurv=_PM_Jack(keep=_i survival rename=survival=_S_PM_jack) noprint notable plots=none;
	time &surv_time*&surv_event(0);
	by _i;
run;

**** for weights calculation ***************************;
ods listing close;
ods output ProductLimitEstimates=_s_bmt_(drop=stratum failure stderr failed left); 
proc lifetest data=_scen;
	time _time_td*_td_event(0);
	id _pat_id;
run;
ods listing;
data _s_bmt _s_bmt5(rename=(_surv_td=_surv_td5) drop=_pat_id); 
	set _s_bmt_ END=tstar_time;
	by _time_td;
	retain s_urv;
	if survival^=. then _surv_td=survival;
	else                _surv_td=s_urv;
	s_urv=_surv_td;
	if _pat_id=. then delete;
	drop censor survival s_urv _time_td;
	if tstar_time then call symput('surv_td_tstar', _surv_td); 
	output _s_bmt;
run;

proc sort data=_data_all;  by _pat_id; run;
proc sort data=_s_bmt;     by _pat_id; run;
proc sort data=_PM_Jack;   by _i;      run;
data _scen_; 
	merge _data_all(in=a) _s_bmt(in=t) _PM_Jack(in=j rename=_i=_pat_id);
	by _pat_id;
run;

data &result_out; set _scen_(in=a); 
	_VM=&samplesize*&surv_tstar-(&samplesize-1)*_S_PM_jack;  
	if 0<=&td_time<=min(&surv_time,&tsearch,&tstar) then do; *donor available and identified;
		_td_=1;
		_M_weight=1; 
		output;
	end;
	else if &surv_time>=min(&tsearch,&tstar) /*&td_time=. or &td_time<0 or &td_time>min(&tstar,&tsearch)*/ then do; *no donor available;
		_td_=0;
		_M_weight=1; 
		output;
	end;
	else if &surv_time<min(&tsearch,&tstar) /* and &surv_time<=&td_time<=min(&tsearch,&tstar) or &td_time=.) */ then do;
		if abs(&surv_td_tstar-_surv_td)<0.00000001 then _M_weight=1;
		else _M_weight=&surv_td_tstar/_surv_td;
		_td_=0;
		output;
		if abs(&surv_td_tstar-_surv_td)>0.00000001 then do; *if zero then there is no chance for donor identification*;
			_td_=1;
			_M_weight=1-&surv_td_tstar/_surv_td; 
			output;
		end;
	end;
	drop _surv_td _S_PM_jack;
run;

**** modelling of weightes pseudo-values ***************************;
ods output  GEEEmpPEst=___beta_M_weights    Estimates=___Surv_M_weights;
proc genmod data=&result_out;
	title "GLM-Model with weighted pseudo-values";
	title2 "with t_search=&tsearch and t*=&tstar";
	title3 'sandwich estimator  by patient';
	title4 "&samplesize included patients (valid survival time and survival status)"; 
	title5 'missing values may occur for patients with no chance for donor identification after death/censoring';
	%if %sysevalf(%superq(remark)=,boolean)=0 %then title6 "&remark"; ;
	fwdlink link=log(-log(_mean_));
	invlink ilink=exp(-exp(_xbeta_));
	class _pat_id _td_(reference="0");
	model _VM = _td_ /dist=normal noscale;
	repeated SUBJECT=_pat_id /type=ind corrw covb;
	estimate 'S1(t*)'      INTERCEPT 1  _td_ 1 0;
	estimate 'S0(t*)'      INTERCEPT 1  _td_ 0 1;
	weight _M_weight; 
run;
quit;


**** calculation of 95 % CIs ***************************;
data _beta1;  *** CI calculation for cHR ***;
	set ___beta_M_weights;
	if Parm='_td_' and level1=1 then label='cHR(t*)';
	else delete;
	Transf_Estimate=exp(Estimate);
	Transf_LowerCL=exp(lowerCL);
	Transf_UpperCL=exp(UpperCL);
	rename Estimate=LBetaEstimate lowerCL=LBetaLowerCL UpperCL=LBetaUpperCL ProbZ=Prob;
	drop Z Parm Level1;
run;
data ___s1; 
	set ___surv_m_weights;
	rename MeanEstimate=Transf_Estimate MeanLowerCL=Transf_UpperCL MeanUpperCL=Transf_LowerCL; *ProbChiSq=Prob;
	drop ProbChiSq ChiSq Alpha;
run;
data _est_; 
	length Label $ 7.;
	label Transf_estimate='Esimate' Transf_LowerCL='Lower 95 % CI' Transf_UpperCL='Upper 95 % CI' prob='p-value(cHR=1)';
	set ___s1 _beta1;
run;

title "Estimations for S0(t*), S1(t*), cHR (t*)";
title2 "and corresonding 95 % confidence intervals (CI)";
title3 "with t_search=&tsearch and t*=&tstar";
title4 "&samplesize included patients (valid survival time and survival status)"; 
%if %sysevalf(%superq(remark)=,boolean)=0 %then title5 "&remark"; ;
proc print data=_est_ noobs label; var Label Transf_Estimate Transf_LowerCL Transf_UpperCL prob; run;
title;

title "observed versus expected donor availability";
title2 "with t_search=&tsearch and t*=&tstar";
title3 "&samplesize included patients (valid survival time and survival status)"; 
%if %sysevalf(%superq(remark)=,boolean)=0 %then title4 "&remark"; ;
proc tabulate data=&result_out;
	var _M_Weight;
	class _donor _td_ ; 
	table _donor='observed' all='total', (_td_='expected' all='total')*_M_Weight=' '*(sum='freqency' pctsum='%'*f=6.2);
	format _donor _td_ _donf_.;
run;
title;

ods exclude all;
proc datasets; 
	delete _M_weight_all _data_all _s_bmt jackknife_s _PM_Jack 
		_scen_ _s_bmt5 _beta1 ___s1 _pm _scen _s_bmt_ 
		___beta_M_weights ___surv_m_weights _est_; 
run;
ods exclude none;
%mend WPV;
